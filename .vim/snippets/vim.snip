# Deprecated: for Vim8
snippet function
abbr    function {function_name}() abort ... endfunction
options head
	function ${1:`expand("%") =~# '\<autoload/' ? expand("%")->substitute('^.*\<autoload/', "", "")->substitute('/', "#", "g")->substitute('\.vim$', "#", "") : ""`}() abort
		${0}
	endfunction

snippet def
abbr    def {FunctionName}(): {return_type} ... enddef
options word
	def ${1:#:FunctionName}(): ${2:#:return_type}
		${0}
	enddef

snippet augroup
abbr    augroup ... ... augroup END
options head
	augroup ${1:#:GroupName}
		autocmd!
		autocmd ${2:#:EventName} ${3:#:filetype} ${0}
	augroup END

snippet augroup_vimrc
abbr    augroup vimrc-foo ... augroup END
options head
	augroup vimrc-${1:`expand("%") =~# '\<autoload/kg8m/' ? expand("%")->substitute('^.*\<autoload/kg8m/', "", "")->substitute('/', "-", "g")->substitute('\.vim$', "", "") : ""`}
		autocmd!
		autocmd ${2:#:EventName} ${3:#:filetype} ${0}
	augroup END

snippet autocmd
abbr    autocmd {EventName} {filetype} ...
options head
	autocmd ${1:#:EventName} ${2:#:filetype} ${0}

snippet doautocmd
abbr    doautocmd <nomodeline> {EventName}  # Use `<nomodeline>` for non-buffer-loading events
options head
	doautocmd <nomodeline> ${1:#:EventName}

snippet if
abbr    if ... ... endif
options head
	if ${1:#:condition}
		${0}
	endif

snippet if_else
alias   ife
abbr    if ... else ... endif
options head
	if ${1:#:condition}
		${0}
	else
	endif

snippet if_else_if
alias   ifeif
abbr    if ... elseif ... else ... endif
options head
	if ${1:#:condition}
		${0}
	elseif 
	else
	endif

snippet for
abbr    for ... in ... ... endfor
options head
	for ${1} in ${2}
		${0}
	endfor

snippet while
abbr    while ... ... endwhile
options head
	while ${1}
		${0}
	endwhile

snippet try_catch
abbr    try ... catch /.../ ... endtry
options head
	try
		${0}
	catch /${1:.*}/
	endtry

snippet try_finally
abbr    try ... finally ... endtry
options head
	try
		${0}
	finally
	endtry
