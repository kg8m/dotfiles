run-shell "tmux setenv -g TMUX_VERSION $( tmux -V | grep -E -o '[0-9.]+' )"
run-shell "tmux setenv -g IS_NEWER_TMUX_VERSION $( echo '$TMUX_VERSION >= 2.9' | bc )"
if-shell -b "[ \"$IS_NEWER_TMUX_VERSION\" -eq 0 ]" "display-message -p 'Tmux version ($TMUX_VERSION) is too old. Upgrade soon.'"

# Prefix
unbind-key C-b
set-option -g prefix C-t

# Clear all unnecessary default bindings
unbind-key C-o      # Rotate through the panes
unbind-key C-z      # Suspend the current client
# unbind-key Space  # Select next layout
unbind-key !        # Break pane to a new window
unbind-key '"'      # Split window vertically
unbind-key "#"      # List all paste buffers
unbind-key $        # Rename current session
unbind-key %        # Split window horizontally
unbind-key &        # Kill current window
unbind-key "'"      # Prompt for window index to select
unbind-key (        # Switch to previous client
unbind-key )        # Switch to next client
unbind-key ,        # Rename current window
unbind-key -        # Delete the most recent paste buffer
# unbind-key .      # Move the current window
unbind-key /        # Describe key binding
# unbind-key 0      # Select window 0
# unbind-key 1      # Select window 1
# unbind-key 2      # Select window 2
# unbind-key 3      # Select window 3
# unbind-key 4      # Select window 4
# unbind-key 5      # Select window 5
# unbind-key 6      # Select window 6
# unbind-key 7      # Select window 7
# unbind-key 8      # Select window 8
# unbind-key 9      # Select window 9
# unbind-key :      # Prompt for a command
unbind-key ";"      # Move to the previously active pane
unbind-key =        # Choose a paste buffer from a list
# unbind-key ?      # List key bindings
unbind-key D        # Choose a client from a list
unbind-key E        # Spread panes out evenly
unbind-key L        # Switch to the last client
unbind-key M        # Clear the marked pane
unbind-key [        # Enter copy mode
unbind-key ]        # Paste the most recent paste buffer
unbind-key c        # Create a new window
# unbind-key d      # Detach the current client
unbind-key f        # Search for a pane
unbind-key i        # Display window information
unbind-key l        # Select the previously current window
unbind-key m        # Toggle the marked pane
unbind-key n        # Select the next window
unbind-key o        # Select the next pane
unbind-key p        # Select the previous pane
unbind-key q        # Display pane numbers
unbind-key r        # Redraw the current client
# unbind-key s      # Choose a session from a list
unbind-key t        # Show a clock
unbind-key w        # Choose a window from a list
# unbind-key x      # Kill the active pane
unbind-key z        # Zoom the active pane
# unbind-key {      # Swap the active pane with the pane above
# unbind-key }      # Swap the active pane with the pane below
unbind-key '~'      # Show messages
unbind-key DC       # Reset so the visible part of the window follows the cursor
unbind-key PPage    # Enter copy mode and scroll up
unbind-key Up       # Select the pane above the active pane
unbind-key Down     # Select the pane below the active pane
unbind-key Left     # Select the pane to the left of the active pane
unbind-key Right    # Select the pane to the right of the active pane
unbind-key M-1      # Set the even-horizontal layout
unbind-key M-2      # Set the even-vertical layout
unbind-key M-3      # Set the main-horizontal layout
unbind-key M-4      # Set the main-vertical layout
unbind-key M-5      # Select the tiled layout
unbind-key M-n      # Select the next window with an alert
unbind-key M-o      # Rotate through the panes in reverse
unbind-key M-p      # Select the previous window with an alert
unbind-key M-Up     # Resize the pane up by 5
unbind-key M-Down   # Resize the pane down by 5
unbind-key M-Left   # Resize the pane left by 5
unbind-key M-Right  # Resize the pane right by 5
unbind-key C-Up     # Resize the pane up
unbind-key C-Down   # Resize the pane down
unbind-key C-Left   # Resize the pane left
unbind-key C-Right  # Resize the pane right
unbind-key S-Up     # Move the visible part of the window up
unbind-key S-Down   # Move the visible part of the window down
unbind-key S-Left   # Move the visible part of the window left
unbind-key S-Right  # Move the visible part of the window right

# Prefix r to reload tmux.conf
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Reload tmux.conf."

# Create new window inheriting current path
bind-key c new-window -c "#{pane_current_path}"

# Enable italic if available (Maybe need to execute `tic ...` command unless available)
# https://qiita.com/delphinus/items/b8c1a8d3af9bbacb85b8
if-shell '[ -n "$( find $HOME/.terminfo -type f -name xterm-256color-italic )" ]' "\
set-option -g default-terminal xterm-256color-italic\
" "\
set-option -g default-terminal xterm-256color\
"

set-option -g status-interval 1
set-option -g status-style fg=colour255,bg=colour23,bold
set-option -g status-justify centre
set-option -g status-left-length 50
set-option -g status-right-length 100
set-option -g status-left "[#{session_name}]"
set-option -g status-right "#[fg=colour255][resurrect] #(~/.config/zsh/bin/tmux-resurrect-last-saved-at)#[default]"

set-option -g automatic-rename off

# Show window's index, directory name, and window flags as window-name
# Show also current command if window width is wide
set-option -g window-status-format "#{window_index}:#(basename '#{pane_current_path}')#{?#{>:#{window_width},200},/#{pane_current_command},}#{window_flags}"
set-option -g window-status-current-format "#{E:window-status-format}"

set-option -g window-style bg=colour234
set-option -g window-active-style bg=colour0
set-option -g window-status-current-style fg=colour23,bg=colour255,bold,underscore
set-option -g pane-border-style fg=colour255,bg=colour0

# http://qiita.com/yanma/items/2644e6db6f3bcf249690
set-option -ag terminal-overrides ",*:U8=0"

set-option -g pane-active-border-style fg=colour255,bg=colour240
set-option -g monitor-activity on
set-option -g window-status-activity-style bg=colour23,fg=colour11

set-option -g base-index 1
set-option -g bell-action none
set-option -g history-limit 25000
set-option -g mouse on

# Split into panes like Vim
bind-key h split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

bind-key C-t select-pane -t :.+  # Select next pane
bind-key C-n select-pane -t :.+  # Select next pane
bind-key C-p select-pane -t :.-  # Select prev pane

# http://qiita.com/pocari/items/b1828c8aea8e3545cadd
set-option -g display-panes-time 10000
bind-key f display-panes

# Copy mode like Vim
set-option -g mode-keys vi
bind-key y copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
bind-key P run "tmux save-buffer -"
bind-key C-c run "tmux save-buffer - | ssh main -t 'LC_CTYPE=UTF-8 pbcopy'" \; display-message "Copy the Selection by pbcopy."

# http://www.youtube.com/watch?v=xUB-quCdun0
# Clear scroll buffer
# Use C-l then C-t then C-l
bind-key C-l clear-history\; display-message "History Cleared."

set-option -g escape-time 50

# http://qiita.com/ryoppy/items/96a4f1eacbe2fd55f18c
set-option -g @plugin "tmux-plugins/tpm"
set-option -g @plugin "tmux-plugins/tmux-resurrect"
set-option -g @plugin "tmux-plugins/tmux-continuum"
set-option -g @plugin "nhdaly/tmux-scroll-copy-mode"
set-option -g @resurrect-capture-pane-contents "on"
set-option -g @resurrect-processes "less more head tail top watch git"
set-option -g @resurrect-strategy-vim "session"
set-option -g @continuum-restore "on"
set-option -g @continuum-save-interval "1"
set-option -g @scroll-speed-num-lines-per-scroll "1"
run-shell "~/.config/tmux/plugins/tpm/tpm"

if-shell "[ -f ~/.tmux.conf.local ]" "source ~/.tmux.conf.local"
