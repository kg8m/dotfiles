version: 2
provide-definition: false

tools:
  actionlint: &actionlint
    lint-command: "[[ '${INPUT}' =~ \\.github/workflows/ ]] && actionlint -oneline -no-color -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  checkmake: &checkmake
    lint-command: "checkmake"
    lint-stdin: true

  # Always show errors on the first line because converted Ruby code doesn't match the original ERB code
  erb: &erb
    lint-command: "erb -x -T - -P | ruby -c 2>&1 1>/dev/null | sed -e 's/^-:/1:/'"
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%l:%m"

  erb-lint: &erb-lint
    lint-command: "erblint --config $HOME/.erb-lint.yml --format compact --enable-all-linters --stdin '${INPUT}'"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  eslint: &eslint
    lint-command: "$HOME/.config/efm-langserver/eslint_wrapper.sh '${INPUT}'"
    lint-stdin: true
    lint-formats:
      - "%l:%c:%t%*[a-z]: %m"
    format-command: "$HOME/.config/efm-langserver/eslint_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  lit-analyzer: &lit-analyzer
    lint-command: "lit-analyzer '${INPUT}' --format list --noColor --strict ${LIT_ANALYZER_EXTRA_OPTIONS}"
    lint-formats:
      - "%*[ ]%l:%c%*[ ]%t%*[a-z]%*[ ]%m"

  markdownlint: &markdownlint
    lint-command: "markdownlint --stdin"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c %m"
      - "%f:%l %m"
      - "%f: %l: %m"

  markuplint: &markuplint
    lint-command: "$HOME/.config/efm-langserver/markuplint_wrapper.sh '${INPUT}'"
    # Using stdin is supported according to markuplint's help, but it doesn't work
    # lint-stdin: true
    lint-formats:
      - "%l:%c %m"

  prettier: &prettier
    format-command: "$HOME/.config/efm-langserver/prettier_wrapper.sh '${INPUT}'"
    format-stdin: true

  rubocop: &rubocop
    lint-command: "$HOME/.config/efm-langserver/rubocop_wrapper.sh '${INPUT}'"
    lint-stdin: true
    lint-formats:
      - "%t:%l:%c: %m"
    format-command: "$HOME/.config/efm-langserver/rubocop_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  ruby: &ruby
    lint-command: "$HOME/.config/efm-langserver/ruby_wrapper.sh '${INPUT}'"
    lint-formats:
      - "%l: %tarning: %m"
      - "%l: %m"

  shellcheck: &shellcheck
    lint-command: "shellcheck --shell=bash --format=gcc --external-sources --enable=all -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %t%*[a-z]: %m"

  shfmt: &shfmt
    format-command: "shfmt -i 2 -ci -sr -kp -filename '${INPUT}'"
    format-stdin: true

  sql-formatter: &sql-formatter
    format-command: "$HOME/.config/efm-langserver/sql_formatter_wrapper.sh"
    format-stdin: true

  stylelint: &stylelint
    lint-command: "stylelint --stdin --stdin-filename /dummy.css --formatter unix --no-color"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%t%*[a-z]]"

  textlint: &textlint
    lint-command: "$HOME/.config/efm-langserver/textlint_wrapper.sh '${INPUT}'"
    lint-stdin: true
    lint-formats:
      - "%l:%c:%t%*[a-z]: %m"
    format-command: "$HOME/.config/efm-langserver/textlint_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  typos: &typos
    lint-command: "typos --format brief -"
    lint-stdin: true
    lint-formats:
      - "-:%l:%c: %m"

  vint: &vint
    lint-command: "vint -"
    lint-stdin: true

  yamllint: &yamllint
    lint-command: "yamllint --format parsable --strict -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: [%t%*[a-z]] %m"

languages:
  =:
    - <<: *typos

  css:
    - <<: *stylelint
    - <<: *prettier

  eruby:
    - <<: *erb
    - <<: *erb-lint

  eruby.yaml:
    - <<: *yamllint

  gitcommit:
    - <<: *textlint

  html:
    - <<: *markuplint
    - <<: *prettier

  javascript:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *prettier

  json:
    - <<: *prettier

  make:
    - <<: *checkmake

  markdown:
    - <<: *markdownlint
    - <<: *textlint

  ruby:
    - <<: *rubocop
    - <<: *ruby

  sh:
    - <<: *shellcheck
    - <<: *shfmt

  sql:
    - <<: *sql-formatter

  typescript:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *prettier

  # Disable because modern syntaxes are not supported
  # vim:
  #   - <<: *vint

  yaml:
    - <<: *actionlint
    - <<: *yamllint
    - <<: *prettier

  zsh:
    - <<: *shellcheck
    # Disable because shfmt sometimes fails to parse or freezes.
    # - <<: *shfmt
