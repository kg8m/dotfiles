version: 2
provide-definition: false

tools:
  actionlint: &actionlint
    prefix: actionlint
    lint-command: "$HOME/.config/efm-langserver/actionlint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  checkmake: &checkmake
    prefix: checkmake
    lint-command: "checkmake"
    lint-after-open: true
    lint-stdin: true

  cspell: &cspell
    prefix: CSpell
    lint-command: "cspell 'stdin://${INPUT}'"
    lint-after-open: true
    # severity: 3 = Information
    lint-severity: 3
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c - %m"

  erb: &erb
    prefix: ERB
    lint-command: "$HOME/.config/efm-langserver/erb_wrapper.sh"
    lint-after-open: true
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%l:%m"

  erb-lint: &erb-lint
    prefix: ERB Lint
    lint-command: "$HOME/.config/efm-langserver/erblint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  eslint: &eslint
    prefix: ESlint
    lint-command: "$HOME/.config/efm-langserver/eslint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%l:%c:%t%*[a-z]: %m"
    format-command: "$HOME/.config/efm-langserver/eslint_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  gixy: &gixy
    prefix: GIXY
    lint-command: "$HOME/.config/efm-langserver/gixy_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: false
    lint-formats:
      - "%f:%t%*[A-Z]: %m"
    lint-category-map:
      L: W # LOW
      M: E # MEDIUM
      H: E # HIGH

  lit-analyzer: &lit-analyzer
    prefix: lit-analyzer
    lint-command: "$HOME/.config/efm-langserver/lit_analyzer_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-formats:
      - "%*[ ]%l:%c%*[ ]%t%*[a-z]%*[ ]%m"

  markdownlint: &markdownlint
    prefix: markdownlint
    lint-command: "markdownlint --stdin --config $HOME/.config/markdownlint/config.yaml"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c %m"
      - "%f:%l %m"
      - "%f: %l: %m"

  markuplint: &markuplint
    prefix: Markuplint
    lint-command: "$HOME/.config/efm-langserver/markuplint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    # Using stdin is supported according to markuplint’s help, but it doesn’t work
    # lint-stdin: true
    lint-formats:
      - "%l:%c %m"

  prettier: &prettier
    format-command: "$HOME/.config/efm-langserver/prettier_wrapper.sh '${INPUT}'"
    format-stdin: true

  rubocop: &rubocop
    prefix: RuboCop
    lint-command: "$HOME/.config/efm-langserver/rubocop_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-category-map:
      C: W  # Convention
      E: E  # Error
      F: E  # Fatal
      R: W  # Refactor
      W: W  # Warning
    lint-stdin: true
    lint-formats:
      - "%t:%l:%c: %m"
    format-command: "$HOME/.config/efm-langserver/rubocop_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  ruby: &ruby
    prefix: Ruby
    lint-command: "$HOME/.config/efm-langserver/ruby_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-formats:
      - "%l: %tarning: %m"
      - "%l: %m"

  shellcheck: &shellcheck
    prefix: ShellCheck
    lint-command: "shellcheck --shell=bash --format=gcc --external-sources --enable=all -"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %t%*[a-z]: %m"

  shfmt: &shfmt
    format-command: "shfmt -i 2 -ci -sr -kp -filename '${INPUT}'"
    format-stdin: true

  slim-lint: &slim-lint
    prefix: Slim-Lint
    lint-command: "slim-lint --stdin-file-path '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l [%t] %m"

  sql-formatter: &sql-formatter
    format-command: "$HOME/.config/efm-langserver/sql_formatter_wrapper.sh"
    format-stdin: true

  stylelint: &stylelint
    prefix: Stylelint
    lint-command: "$HOME/.config/efm-langserver/stylelint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%t%*[a-z]]"

  stylua: &stylua
    format-command: "stylua --stdin-filepath '${INPUT}' -"
    format-stdin: true

  taplo: &taplo
    format-command: "taplo fmt -"
    format-stdin: true

  textlint: &textlint
    prefix: textlint
    lint-command: "$HOME/.config/efm-langserver/textlint_wrapper.sh '${INPUT}'"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%l:%c:%t%*[a-z]: %m"
    format-command: "$HOME/.config/efm-langserver/textlint_wrapper.sh '${INPUT}' --fix"
    format-stdin: true

  typos: &typos
    prefix: typos
    lint-command: "typos --format brief -"
    lint-after-open: true
    # severity: 3 = Information
    lint-severity: 3
    lint-stdin: true
    lint-formats:
      - "-:%l:%c: %m"

  vint: &vint
    prefix: Vint
    lint-command: "vint -"
    lint-after-open: true
    lint-stdin: true

  yamllint: &yamllint
    prefix: yamllint
    lint-command: "yamllint --format parsable --strict -"
    lint-after-open: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: [%t%*[a-z]] %m"

languages:
  =:
    - <<: *cspell
    - <<: *typos

  Gemfile:
    - <<: *rubocop
    - <<: *ruby

  bash:
    - <<: *shellcheck
    - <<: *shfmt

  css:
    - <<: *stylelint
    - <<: *prettier

  eruby:
    - <<: *erb
    - <<: *erb-lint
    - <<: *markuplint

  eruby.yaml:
    - <<: *yamllint

  gitcommit:
    - <<: *textlint

  html:
    - <<: *markuplint
    - <<: *prettier

  javascript:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *markuplint
    - <<: *prettier

  javascriptreact:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *markuplint
    - <<: *prettier

  json:
    - <<: *prettier

  jsonc:
    - <<: *prettier

  lua:
    - <<: *stylua

  make:
    - <<: *checkmake

  markdown:
    - <<: *markdownlint
    - <<: *prettier
    - <<: *rubocop
    - <<: *textlint

  nginx:
    - <<: *gixy

  ruby:
    - <<: *rubocop
    - <<: *ruby

  scss:
    - <<: *stylelint
    - <<: *prettier

  sh:
    - <<: *shellcheck
    - <<: *shfmt

  slim:
    - <<: *slim-lint

  sql:
    - <<: *sql-formatter

  toml:
    - <<: *taplo

  typescript:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *markuplint
    - <<: *prettier

  typescriptreact:
    - <<: *eslint
    - <<: *lit-analyzer
    - <<: *markuplint
    - <<: *prettier

  vim:
    - <<: *vint

  vue:
    - <<: *markuplint
    - <<: *prettier

  yaml:
    - <<: *actionlint
    - <<: *yamllint
    - <<: *prettier

  zsh:
    - <<: *shellcheck
    - <<: *shfmt
