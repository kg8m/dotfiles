snippet if
abbr    if (...) { ... }
options word
	if (${1:#:condition}) {
		${0}
	}

snippet if_else
alias   ife
abbr    if (...) { ... } else { ... }
options head
	if (${1:#:condition}) {
		${0}
	} else {
		// FIXME
	}

snippet if_else_if
alias   ifeif
abbr    if (...) { ... } else if (...) { ... } else { ... }
options head
	if (${1:#:condition}) {
		${0}
	} else if (1 /* FIXME */) {
		// FIXME
	} else {
		// FIXME
	}

snippet switch_case
alias   case_switch
alias   switch
abbr    switch (foo) { case bar: ... break; }
options head
	switch (${1}) {
	case ${2}:
		${3}
		break;
	}

snippet for
abbr    for (int i = 0; i < argc; i++) { ... }
options head
	for (int ${1:i} = ${2:0}; $1${3: < argc}; $1++) {
		${0}
	}

snippet while
abbr    while (...) { ... }
options head
	while (${1:#:condition}) {
		${0}
	}

snippet do_while
abbr    do { ... } while (...);
options head
	do {
		${0}
	} while (${1:#:condition});

snippet main
abbr    main(void) { ... }
options word
	main(void) {
		${0}

		return 0;
	}

snippet main_with_args
abbr    main(int argc, char *argv[]) { ... }
options word
	main(int argc, char *argv[]) {
		${0}

		return 0;
	}

snippet struct
abbr    struct foo { ... };
	struct ${1:#:name} {
		${2:int} ${3:#:prop};
	};

snippet typedef_struct
abbr    typedef struct { ... } foo
	typedef struct {
		${2:int} ${3:#:prop};
	} ${1:#:name};

snippet enum
abbr    enum { ... };
	enum {
	  ${1:#:CONSTANT},
	};
