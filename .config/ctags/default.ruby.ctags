# Build a tag for `BAR` from:
#
#   FOO = BAR = "foo and bar"
--regex-ruby=/\b[A-Z0-9_]+\s*=\s*\b([A-Z0-9_]+)\s*=($|[^=>])/\1/

# Build a tag for `FOO` from:
#
#   const_set :FOO, "foo"
#   const_set "FOO", "foo"
#   const_set(:FOO, "foo")
#   const_set("FOO", "foo")
--regex-ruby=/const_set(\s+|\()[:"']([A-Z0-9_]+)/\2/

# Build a tag for `foo` from:
#
#   attr_accessor :foo
#   attr_reader :foo
#   attr_writer :foo
--regex-ruby=/\battr_(accessor|reader|writer)\s+:([a-zA-Z0-9_?, ]+)/\2/

# Build a tag for RSpecâ€™s `be_*` matchers.
--regex-ruby=/\bdef\s+([a-zA-Z0-9][a-zA-Z0-9_]*)\?/be_\1/

# Build a tag for `foo` from:
#
#   memoize def foo
--regex-ruby=/\bdef\s+([a-zA-Z0-9_]+[!?]?)/\1/

# Build a tag for `foo` from:
#
#   belongs_to :foo
#   has_one :foo
#   has_many :foo
#   has_and_belongs_to_many :foo
--regex-ruby=/\b(belongs_to|has_one|has_many|has_and_belongs_to_many)\s+:([a-zA-Z0-9_]+)/\2/

# Build a tag for `foo_id` from:
#
#   belongs_to :foo
--regex-ruby=/\bbelongs_to\s+:([a-zA-Z0-9_]+)/\1_id/

# Build a tag for `loaded_foo?` from:
#
#   belongs_to :foo
--regex-ruby=/\bbelongs_to\s+:([a-zA-Z0-9_]+)/loaded_\1?/

# Build a tag for `build_foo` from:
#
#   has_one :foo
--regex-ruby=/\bhas_one\s+:([a-zA-Z0-9_]+)/build_\1/

# Build a tag for `loaded_foo?` from:
#
#   has_one :foo
--regex-ruby=/\bhas_one\s+:([a-zA-Z0-9_]+)/loaded_\1?/

# Build a tag for `foo_ids` from:
#
#   has_many :foos
#   has_and_belongs_to_many :foos
--regex-ruby=/\b(has_many|has_and_belongs_to_many)\s+:([a-zA-Z0-9_]+e?)s\b/\2_ids/

# Build a tag for `foos_attributes=` from:
#
#   accepts_nested_attributes_for :foos
--regex-ruby=/\baccepts_nested_attributes_for\s+:([a-zA-Z0-9_]+)/\1_attributes=/

# Build a tag for `foo` from:
#
#   scope :foo
#   named_scope :foo
--regex-ruby=/\b(named_)?scope\s+:([a-zA-Z0-9_]+[!?]?)/\2/

# Build a tag for `foo` from:
#
#   shared_examples "foo"
#   shared_context "foo"
#   shared_examples_for "foo"
--regex-ruby=/\bshared_(examples|context|examples_for)\s+["'](.*)["']\s+do\b/\2/

# Build a tag for `foo` from:
#
#   Fabricator :foo
#   Fabricator(:foo)
--regex-ruby=/\bFabricator(\s+|\():([a-zA-Z0-9_]+)/\2/

# Build a tag for `foo` from:
#
#   factory :foo
#   factory(:foo)
--regex-ruby=/\bfactory(\s+|\():([a-zA-Z0-9_]+)/\2/
