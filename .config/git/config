[github]
	user = kg8m

[user]
	name  = kg8m
	email = takumi.kagiyama@gmail.com
	useConfigOnly = true
	signingkey = 999EA51A6544E454

[url "git@github.com:"]
	pushInsteadOf = https://github.com/

[url "git@gitlab.com:"]
	pushInsteadOf = https://gitlab.com/

[init]
	defaultBranch = main

[branch]
	autosetupmerge = true
	sort = -authordate

[color]
	branch = auto
	diff   = auto
	status = auto
	ui = true

[color "branch"]
	current = white red
	local   = yellow
	remote  = green

[color "diff"]
	meta = yellow
	frag = magenta bold
	old  = red
	new  = green

	# #2c0001 is 25% darker than #370001 (delta's original minus red).
	# #001d00 is 25% darker than #002400 (delta's original plus green).
	oldMoved = "white #2c0001 italic"
	newMoved = "white #001d00 italic"

[color "interactive"]
	prompt = 236 yellow bold

[color "status"]
	added     = yellow
	changed   = green
	untracked = cyan
	unmerged  = red

[commit]
	verbose = true
	cleanup = scissors
	gpgsign = true

[core]
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = vim
	excludesfile = ~/.config/git/ignore
	hooksPath = ~/.config/git/hooks
	pager = git-pager

	# Avoid broken filepaths which contain multibyte characters.
	quotepath = false

[delta]
	line-numbers = true
	line-numbers-minus-style = "red auto"
	line-numbers-zero-style = "#999999 auto"
	line-numbers-plus-style = "green auto"

	# Default: left = "{nm:^4}⋮", right = "{np:^4}│"
	# `^` means center aligned but `>` means right aligned.
	line-numbers-left-format = "{nm:>4} ⋮"
	line-numbers-right-format = "{np:>4} │"

	file-style = "yellow auto bold"
	file-decoration-style = "yellow ul ol"
	hunk-header-style = "line-number syntax"
	hunk-header-decoration-style = "#666666 box"

	minus-style = "syntax auto"

	# cf. color.diff.oldMoved and color.diff.newMoved
	map-styles = "white #2c0001 italic => syntax #2c0001 italic, white #001d00 italic => syntax italic"

[diff]
	algorithm = histogram
	context = 10
	compactionHeuristic = true
	colorMoved = plain
	colorMovedWS = ignore-all-space
	renames = true
	submodule = diff

	# Disable because some tools to apply patches don't work
	noprefix = false

[fetch]
	prune = true

[interactive]
	diffFilter = git-diff-filter

[merge]
	tool = vimdiff
	conflictStyle = diff3

[mergetool]
	keepBackup = false

[pager]
	log  = git-pager
	show = git-pager
	diff = git-pager

[pull]
	rebase = true

[rebase]
	autostash = true
	showCurrentPatch = true

[rerere]
	enabled = true

[stash]
	showPatch = true

[status]
	showUntrackedFiles = all

[submodule]
	fetchJobs = 4

[alias]
	# add
	add-by-select             = bulk-add
	add-with-intent-by-select = bulk-add-with-intent
	add-by-patch-by-select    = bulk-add-by-patch

	bulk-intent-to-add = bulk-add-with-intent

	bulk-add             = sh git:add:bulk
	bulk-add-with-intent = sh git:add:bulk:intent
	bulk-add-by-patch    = sh git:add:bulk:patch

	# restore
	unstage = restore --staged

	restore-by-select          = bulk-restore
	restore-by-select-staged   = bulk-restore-staged
	unstage-by-select          = bulk-unstage
	unstage-by-patch-by-select = bulk-unstage-by-patch

	bulk-restore          = sh git:restore:bulk
	bulk-restore-staged   = sh git:restore:bulk:staged
	bulk-unstage          = sh git:restore:bulk:staged
	bulk-unstage-by-patch = sh git:restore:bulk:staged:patch

	# clone
	clone-with-submodules = clone --recursive

	shallow-clone = "!git sh \"git:clone:shallow $*\""

	# switch
	sw  = switch
	sws = switch-by-select

	switch-by-select = sh git:switch:select

	switch-to-main   = sh git:switch:main
	switch-to-master = sh git:switch:main

	# checkout
	co = checkout

	# pull/fetch/merge/rebase
	up = update
	f  = fetch

	update         = sh git:update:with_log
	shallow-update = sh git:update:shallow
	update-main    = sh git:update:main
	update-master  = sh git:update:main

	# branch
	brs = branches
	br  = branch

	branches = sh git:branch:list:all

	create-branch-with-set-upstream = "!git sh \"git:branch:create:with_set_upstream '$1' '$2' '$3'\""

	delete-fully-merged-local-branch = branch --delete
	delete-local-branches            = bulk-delete-local-branches
	delete-remote-branches           = bulk-delete-remote-branches

	branch-delete-locals  = bulk-delete-local-branches
	branch-delete-remotes = bulk-delete-remote-branches

	bulk-delete-local-branches  = sh git:branch:delete:bulk:local
	bulk-delete-remote-branches = sh git:branch:delete:bulk:remote

	# commit
	ci = commit

	commit-by-select = bulk-commit

	bulk-commit = sh git:commit:bulk

	# push
	push-with-revision = "!git sh \"git:push:revision $1\""

	# reset/revert
	edit-commits      = rebase --interactive
	reset-commits     = edit-commits
	reset-last-commit = reset --soft HEAD~

	# clean
	clean-by-select = bulk-clean

	bulk-clean = sh git:clean:bulk

	# log
	lg = log-graph
	la = log --branches --tags --remotes
	lp = log-with-patch

	log-graph      = log --graph --pretty=format:\"%Cgreen%h %ci %Cblue%an %Creset%s\"
	log-with-patch = log --stat --patch

	lg-branches = sh 'git:log:compare:branch --graph --pretty=format:\\\"\"%Cgreen%h %ci %Cblue[C] %cn [A] %an %Creset%s\\\"\"'
	lp-branches = sh 'git:log:compare:branch --stat --patch'

	# diff
	di = diff-without-space-changes
	dc = diff-without-space-changes --cached
	ds = diff-without-space-changes --staged
	dw = diff-without-space-changes --color-words
	dh = diff-without-space-changes HEAD

	diff-without-space-changes = diff --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --ignore-space-change --color-moved-ws=allow-indentation-change

	diff-stat-branches = diff-branches --stat-width 150

	diff-branches      = "!git sh \"git:diff:branch $*\""
	diff-branch-from   = "!git sh \"git:diff:branch:from $*\""
	changed-files-from = "!git sh \"git:diff:branch:from:nameonly $*\""

	# stash
	stash-all-with-message = "!git sh \"git:stash:all:with_message $*\""

	# show
	show-without-diff = show -s

	# status
	st = status-with-color

	status-with-filter = "!git sh \"git:status:filter:all $*\""
	status-with-color  = "!git sh \"git:status:color $*\""

	# cherry-pick
	pick = cherry-pick
	p    = cherry-pick

	# submodule
	submodule-update-all = update-submodules
	submodule-remove     = remove-submodules
	submodule-deinit     = deinit-submodules

	update-submodules = sh git:submodule:update
	remove-submodules = sh git:submodule:remove:bulk
	deinit-submodules = sh git:submodule:deinit:bulk

	# utility
	aliases = alias
	alias   = sh git:alias:list
	which   = "!git sh \"git:alias:which '$1'\""

	info = remote show origin

	chmod       = "!git sh \"git:utility:chmod '$1'\""
	diff-or-cat = "!git sh \"git:utility:diff_or_cat '$1'\""

	sh = "!zsh -c \"source ~/.config/git/aliases; $1\""

[include]
	path = ~/.config/git.local/config
